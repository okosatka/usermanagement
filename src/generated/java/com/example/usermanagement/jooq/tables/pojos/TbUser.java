/*
 * This file is generated by jOOQ.
 */

package com.example.usermanagement.jooq.tables.pojos;


import java.io.Serializable;


/**
 * All users
 */
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class TbUser implements Serializable {

    private static final long serialVersionUID = 1L;

    private final String username;
    private final String password;
    private final String email;
    private final String role;

    public TbUser(TbUser value) {
        this.username = value.username;
        this.password = value.password;
        this.email = value.email;
        this.role = value.role;
    }

    public TbUser(
            String username,
            String password,
            String email,
            String role
    ) {
        this.username = username;
        this.password = password;
        this.email = email;
        this.role = role;
    }

    /**
     * Getter for <code>public.tb_user.username</code>.
     */
    public String getUsername() {
        return this.username;
    }

    /**
     * Getter for <code>public.tb_user.password</code>.
     */
    public String getPassword() {
        return this.password;
    }

    /**
     * Getter for <code>public.tb_user.email</code>.
     */
    public String getEmail() {
        return this.email;
    }

    /**
     * Getter for <code>public.tb_user.role</code>.
     */
    public String getRole() {
        return this.role;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }
        if (obj == null) {
            return false;
        }
        if (getClass() != obj.getClass()) {
            return false;
        }
        final TbUser other = (TbUser) obj;
        if (this.username == null) {
            if (other.username != null) {
                return false;
            }
        } else if (!this.username.equals(other.username)) {
            return false;
        }
        if (this.password == null) {
            if (other.password != null) {
                return false;
            }
        } else if (!this.password.equals(other.password)) {
            return false;
        }
        if (this.email == null) {
            if (other.email != null) {
                return false;
            }
        } else if (!this.email.equals(other.email)) {
            return false;
        }
        if (this.role == null) {
            if (other.role != null) {
                return false;
            }
        } else if (!this.role.equals(other.role)) {
            return false;
        }
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.username == null) ? 0 : this.username.hashCode());
        result = prime * result + ((this.password == null) ? 0 : this.password.hashCode());
        result = prime * result + ((this.email == null) ? 0 : this.email.hashCode());
        result = prime * result + ((this.role == null) ? 0 : this.role.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("TbUser (");

        sb.append(username);
        sb.append(", ").append(password);
        sb.append(", ").append(email);
        sb.append(", ").append(role);

        sb.append(")");
        return sb.toString();
    }
}
